name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: typewriter
            asset_name: typewriter-linux-x86_64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: typewriter.exe
            asset_name: typewriter-windows-x86_64.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: typewriter
            asset_name: typewriter-macos-x86_64.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: typewriter
            asset_name: typewriter-macos-aarch64.tar.gz

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev pkg-config
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      
      - name: Prepare Archive (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir release
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/
          cp -r sounds release/
          cp README.md LICENSE release/
          cd release
          tar czf ../${{ matrix.asset_name }} *
      
      - name: Prepare Archive (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir release
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/
          cp -r sounds release/
          cp README.md LICENSE release/
          Compress-Archive -Path release/* -DestinationPath ${{ matrix.asset_name }}
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream